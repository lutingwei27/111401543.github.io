{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/typing-game/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport GamePage from './GamePage';\nimport TypingGame from './TypingGame';\nimport dataEng from './dataEng.json';\nimport dataCh from './dataCh.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameText, setGameText] = useState('');\n  const [gameIndex, setGameIndex] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [language, setLanguage] = useState('english');\n  const [length, setLength] = useState('long');\n  const [totalScore, setTotalScore] = useState(0);\n  const [usedTexts, setUsedTexts] = useState([]);\n  const [lastScore, setLastScore] = useState(0);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Load the data based on the selected language\n    const fetchData = () => {\n      let dataSet = language === 'english' ? dataEng : dataCh;\n      setData(dataSet[length]);\n    };\n    fetchData();\n  }, [language, length]);\n  const handleStartGame = () => {\n    const newText = getRandomText();\n    setGameStarted(true);\n    setGameText(newText);\n    setGameIndex(gameIndex + 1);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n  const handleSubmit = (errors, time) => {\n    setErrorCount(errors);\n    setElapsedTime(time);\n    const wordCount = gameText.length;\n    const allowedTime = wordCount * 0.5;\n    const errorRate = errors / gameText.length * 100;\n    let score = 0;\n    if (errorRate <= 60) {\n      if (time <= allowedTime) {\n        score = 5;\n      } else if (time <= allowedTime + 5) {\n        score = 3;\n      } else if (time <= allowedTime + 10) {\n        score = 1;\n      } else if (time <= allowedTime + 15) {\n        score = 0.5;\n      }\n    }\n    score -= Math.ceil(errorRate / 5) * 0.5;\n    setLastScore(score);\n    setTotalScore(totalScore + score);\n    setShowResults(true);\n  };\n  const handleNextLevel = () => {\n    const newText = getRandomText();\n    setGameText(newText);\n    setGameStarted(true);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n  const handleExitGame = () => {\n    if (window.confirm('你確定要離開遊戲嗎？這會清除當前成績。')) {\n      setGameStarted(false);\n      setShowResults(false);\n      setGameText('');\n      setGameIndex(0);\n      setErrorCount(0);\n      setElapsedTime(0);\n      setTotalScore(0);\n      setUsedTexts([]);\n      setLastScore(0);\n    }\n  };\n  const getRandomText = () => {\n    const remainingTexts = data.filter(text => !usedTexts.includes(text));\n    if (remainingTexts.length === 0) {\n      setUsedTexts([]);\n      return data[Math.floor(Math.random() * data.length)];\n    } else {\n      return remainingTexts[Math.floor(Math.random() * remainingTexts.length)];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!gameStarted && !showResults && /*#__PURE__*/_jsxDEV(GamePage, {\n      onStartGame: handleStartGame,\n      setLanguage: setLanguage,\n      setLength: setLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 40\n    }, this), gameStarted && !showResults && /*#__PURE__*/_jsxDEV(TypingGame, {\n      text: gameText,\n      onSubmit: handleSubmit,\n      totalScore: totalScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 39\n    }, this), showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6E2C\\u9A57\\u7D50\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u932F\\u8AA4\\u5B57\\u6578\\uFF1A \", errorCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u82B1\\u8CBB\\u6642\\u9593\\uFF1A\", elapsedTime, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u932F\\u8AA4\\u7387\\uFF1A \", (errorCount / gameText.length * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u672C\\u6B21\\u5F97\\u5206\\uFF1A\", lastScore, \" \\u5206\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-level-button\",\n        onClick: handleNextLevel,\n        children: \"\\u4E0B\\u4E00\\u95DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: handleExitGame,\n        children: \"\\u96E2\\u958B\\u904A\\u6232\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+hZI+wCbhpF87IZ5NrD8vwzLxqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GamePage","TypingGame","dataEng","dataCh","jsxDEV","_jsxDEV","App","_s","gameStarted","setGameStarted","gameText","setGameText","gameIndex","setGameIndex","errorCount","setErrorCount","elapsedTime","setElapsedTime","showResults","setShowResults","language","setLanguage","length","setLength","totalScore","setTotalScore","usedTexts","setUsedTexts","lastScore","setLastScore","data","setData","fetchData","dataSet","handleStartGame","newText","getRandomText","handleSubmit","errors","time","wordCount","allowedTime","errorRate","score","Math","ceil","handleNextLevel","handleExitGame","window","confirm","remainingTexts","filter","text","includes","floor","random","className","children","onStartGame","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","toFixed","onClick","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/typing-game/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport GamePage from './GamePage';\nimport TypingGame from './TypingGame';\nimport dataEng from './dataEng.json';\nimport dataCh from './dataCh.json';\nimport './App.css';\n\nfunction App() {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameText, setGameText] = useState('');\n  const [gameIndex, setGameIndex] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [language, setLanguage] = useState('english');\n  const [length, setLength] = useState('long');\n  const [totalScore, setTotalScore] = useState(0);\n  const [usedTexts, setUsedTexts] = useState([]);\n  const [lastScore, setLastScore] = useState(0);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // Load the data based on the selected language\n    const fetchData = () => {\n      let dataSet = language === 'english' ? dataEng : dataCh;\n      setData(dataSet[length]);\n    };\n\n    fetchData();\n  }, [language, length]);\n\n  const handleStartGame = () => {\n    const newText = getRandomText();\n    setGameStarted(true);\n    setGameText(newText);\n    setGameIndex(gameIndex + 1);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n\n  const handleSubmit = (errors, time) => {\n    setErrorCount(errors);\n    setElapsedTime(time);\n\n    const wordCount = gameText.length;\n    const allowedTime = wordCount * 0.5;\n\n    const errorRate = (errors / gameText.length) * 100;\n\n    let score = 0;\n\n    if (errorRate <= 60) {\n      if (time <= allowedTime) {\n        score = 5;\n      } else if (time <= allowedTime + 5) {\n        score = 3;\n      } else if (time <= allowedTime + 10) {\n        score = 1;\n      } else if (time <= allowedTime + 15) {\n        score = 0.5;\n      }\n    }\n\n    score -= Math.ceil(errorRate / 5) * 0.5;\n\n    setLastScore(score);\n    setTotalScore(totalScore + score);\n    setShowResults(true);\n  };\n\n  const handleNextLevel = () => {\n    const newText = getRandomText();\n    setGameText(newText);\n    setGameStarted(true);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n\n  const handleExitGame = () => {\n    if (window.confirm('你確定要離開遊戲嗎？這會清除當前成績。')) {\n      setGameStarted(false);\n      setShowResults(false);\n      setGameText('');\n      setGameIndex(0);\n      setErrorCount(0);\n      setElapsedTime(0);\n      setTotalScore(0);\n      setUsedTexts([]);\n      setLastScore(0);\n    }\n  };\n\n  const getRandomText = () => {\n    const remainingTexts = data.filter(text => !usedTexts.includes(text));\n    if (remainingTexts.length === 0) {\n      setUsedTexts([]);\n      return data[Math.floor(Math.random() * data.length)];\n    } else {\n      return remainingTexts[Math.floor(Math.random() * remainingTexts.length)];\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!gameStarted && !showResults && <GamePage onStartGame={handleStartGame} setLanguage={setLanguage} setLength={setLength} />}\n      {gameStarted && !showResults && <TypingGame text={gameText} onSubmit={handleSubmit} totalScore={totalScore} />}\n      {showResults && (\n        <div>\n          <h2>測驗結果</h2>\n          <p>錯誤字數： {errorCount}</p>\n          <p>花費時間：{elapsedTime} seconds</p>\n          <p>錯誤率： {(errorCount / gameText.length * 100).toFixed(2)}%</p>\n          <p>本次得分：{lastScore} 分</p> \n          <button className=\"next-level-button\" onClick={handleNextLevel}>下一關</button>\n          <button className=\"exit-button\" onClick={handleExitGame}>離開遊戲</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}