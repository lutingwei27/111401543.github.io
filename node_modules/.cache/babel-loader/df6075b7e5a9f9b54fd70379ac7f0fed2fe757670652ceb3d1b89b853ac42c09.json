{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/typing-game/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport GamePage from './GamePage';\nimport TypingGame from './TypingGame';\nimport dataEng from './dataEng.json';\nimport dataCh from './dataCh.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameText, setGameText] = useState('');\n  const [gameIndex, setGameIndex] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [language, setLanguage] = useState('chinese');\n  const [length, setLength] = useState('long');\n  const [totalScore, setTotalScore] = useState(0);\n  const [usedTexts, setUsedTexts] = useState([]);\n  const handleStartGame = () => {\n    const newText = getRandomText();\n    setGameStarted(true);\n    setGameText(newText);\n    setGameIndex(gameIndex + 1);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n  const handleSubmit = (errors, time) => {\n    setErrorCount(errors);\n    setElapsedTime(time);\n    const wordCount = gameText.length;\n    const allowedTime = wordCount * 0.5;\n    let score = 0;\n    if (time <= allowedTime) {\n      score = 3;\n    } else if (time <= allowedTime + 5) {\n      score = 2;\n    } else if (time <= allowedTime + 10) {\n      score = 1;\n    } else if (time <= allowedTime + 20) {\n      score = 0.5;\n    }\n    score -= errors;\n    setTotalScore(totalScore + score);\n    setShowResults(true);\n  };\n  const handleNextLevel = () => {\n    const newText = getRandomText();\n    setGameText(newText);\n    setGameStarted(true);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n  const handleExitGame = () => {\n    if (window.confirm('你確定要離開遊戲嗎？這會清除當前成績。')) {\n      setGameStarted(false);\n      setShowResults(false);\n      setGameText('');\n      setGameIndex(0);\n      setErrorCount(0);\n      setElapsedTime(0);\n      setTotalScore(0);\n      setUsedTexts([]);\n    }\n  };\n  const getRandomText = () => {\n    let selectedData;\n    if (language === 'english') {\n      selectedData = dataEng;\n    } else {\n      selectedData = dataCh;\n    }\n    let selectedTexts;\n    if (length === 'short') {\n      selectedTexts = selectedData.short;\n    } else if (length === 'medium') {\n      selectedTexts = selectedData.medium;\n    } else {\n      selectedTexts = selectedData.long;\n    }\n    const remainingTexts = selectedTexts.filter(text => !usedTexts.includes(text));\n    if (remainingTexts.length === 0) {\n      setUsedTexts([]);\n      return selectedTexts[Math.floor(Math.random() * selectedTexts.length)];\n    } else {\n      return remainingTexts[Math.floor(Math.random() * remainingTexts.length)];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!gameStarted && !showResults && /*#__PURE__*/_jsxDEV(GamePage, {\n      onStartGame: handleStartGame,\n      setLanguage: setLanguage,\n      setLength: setLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 40\n    }, this), gameStarted && !showResults && /*#__PURE__*/_jsxDEV(TypingGame, {\n      text: gameText,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 39\n    }, this), showResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u6E2C\\u9A57\\u7D50\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u932F\\u8AA4\\u5B57\\u6578\\uFF1A \", errorCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u82B1\\u8CBB\\u6642\\u9593\\uFF1A\", elapsedTime, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u932F\\u8AA4\\u7387\\uFF1A \", (errorCount / gameText.length * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u7576\\u524D\\u5F97\\u5206\\uFF1A\", totalScore, \" \\u5206\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextLevel,\n        children: \"Next Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExitGame,\n        children: \"Exit Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"onYHsFaiuv/HWe3kRd5yRPBG2FU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GamePage","TypingGame","dataEng","dataCh","jsxDEV","_jsxDEV","App","_s","gameStarted","setGameStarted","gameText","setGameText","gameIndex","setGameIndex","errorCount","setErrorCount","elapsedTime","setElapsedTime","showResults","setShowResults","language","setLanguage","length","setLength","totalScore","setTotalScore","usedTexts","setUsedTexts","handleStartGame","newText","getRandomText","handleSubmit","errors","time","wordCount","allowedTime","score","handleNextLevel","handleExitGame","window","confirm","selectedData","selectedTexts","short","medium","long","remainingTexts","filter","text","includes","Math","floor","random","className","children","onStartGame","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","toFixed","onClick","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/typing-game/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport GamePage from './GamePage';\nimport TypingGame from './TypingGame';\nimport dataEng from './dataEng.json';\nimport dataCh from './dataCh.json';\nimport './App.css';\n\nfunction App() {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameText, setGameText] = useState('');\n  const [gameIndex, setGameIndex] = useState(0);\n  const [errorCount, setErrorCount] = useState(0);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [language, setLanguage] = useState('chinese');\n  const [length, setLength] = useState('long');\n  const [totalScore, setTotalScore] = useState(0);\n  const [usedTexts, setUsedTexts] = useState([]);\n\n  const handleStartGame = () => {\n    const newText = getRandomText();\n    setGameStarted(true);\n    setGameText(newText);\n    setGameIndex(gameIndex + 1);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n\n  const handleSubmit = (errors, time) => {\n    setErrorCount(errors);\n    setElapsedTime(time);\n\n    const wordCount = gameText.length;\n    const allowedTime = wordCount * 0.5;\n\n    let score = 0;\n\n    if (time <= allowedTime) {\n      score = 3;\n    } else if (time <= allowedTime + 5) {\n      score = 2;\n    } else if (time <= allowedTime + 10) {\n      score = 1;\n    } else if (time <= allowedTime + 20) {\n      score = 0.5;\n    }\n\n    score -= errors;\n\n    setTotalScore(totalScore + score);\n    setShowResults(true);\n  };\n\n  const handleNextLevel = () => {\n    const newText = getRandomText();\n    setGameText(newText);\n    setGameStarted(true);\n    setShowResults(false);\n    setUsedTexts([...usedTexts, newText]);\n  };\n\n  const handleExitGame = () => {\n    if (window.confirm('你確定要離開遊戲嗎？這會清除當前成績。')) {\n      setGameStarted(false);\n      setShowResults(false);\n      setGameText('');\n      setGameIndex(0);\n      setErrorCount(0);\n      setElapsedTime(0);\n      setTotalScore(0);\n      setUsedTexts([]);\n    }\n  };\n\n  const getRandomText = () => {\n    let selectedData;\n    if (language === 'english') {\n      selectedData = dataEng;\n    } else {\n      selectedData = dataCh;\n    }\n\n    let selectedTexts;\n    if (length === 'short') {\n      selectedTexts = selectedData.short;\n    } else if (length === 'medium') {\n      selectedTexts = selectedData.medium;\n    } else {\n      selectedTexts = selectedData.long;\n    }\n\n    const remainingTexts = selectedTexts.filter(text => !usedTexts.includes(text));\n    if (remainingTexts.length === 0) {\n      setUsedTexts([]);\n      return selectedTexts[Math.floor(Math.random() * selectedTexts.length)];\n    } else {\n      return remainingTexts[Math.floor(Math.random() * remainingTexts.length)];\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {!gameStarted && !showResults && <GamePage onStartGame={handleStartGame} setLanguage={setLanguage} setLength={setLength} />}\n      {gameStarted && !showResults && <TypingGame text={gameText} onSubmit={handleSubmit} />}\n      {showResults && (\n        <div>\n          <h2>測驗結果</h2>\n          <p>錯誤字數： {errorCount}</p>\n          <p>花費時間：{elapsedTime} seconds</p>\n          <p>錯誤率： {(errorCount / gameText.length * 100).toFixed(2)}%</p>\n          <p>當前得分：{totalScore} 分</p>\n          <button onClick={handleNextLevel}>Next Level</button>\n          <button onClick={handleExitGame}>Exit Game</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}